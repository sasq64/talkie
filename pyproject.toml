[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "talkie"
version = "1.0.0"
description = "A Voice-to-Text and Text-to-Speech interactive fiction player"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Games/Entertainment",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
]
requires-python = ">=3.10"
dependencies = [
    "pixpy",
    "openai",
    "pyaudio",
    "pydub",
    "pyyaml",
    "lagom",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pyright",
    "ruff",
    "black",
    "isort",
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
]

[project.urls]
Homepage = "https://github.com/sasq64/talkie"
Repository = "https://github.com/sasq64/talkie"
Issues = "https://github.com/sasq64/talkie/issues"

[project.scripts]
talkie = "talkie.__main__:main"

[tool.setuptools]
packages = ["talkie", "talkie.utils"]

[tool.setuptools.package-data]
talkie = ["data/*"]

[tool.pyright]
include = ["talkie", "tests"]
exclude = ["**/node_modules", "**/__pycache__", "**/.*"]
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false
reportAny = false
pythonVersion = "3.10"

[tool.ruff]
target-version = "py310"
line-length = 88
exclude = ["tests/**"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"] # assert allowed in tests

[tool.black]
target-version = ['py310']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=talkie",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
